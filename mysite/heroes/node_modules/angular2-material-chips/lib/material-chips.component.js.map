{"version":3,"sources":["material-chips.component.ts"],"names":[],"mappings":"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","file":"material-chips.component.js","sourcesContent":["import {\n  Component,\n  NgModule,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  forwardRef\n} from '@angular/core'\n//import {NgClass} from '@angular/common';\n\n\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n\nconst noop = () => {\n};\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MaterialChipsComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'material-chips',\n  template: `\n    <div *ngIf=\"values && values.length\" class=\"md-chip-list\" [ngClass]=\"focused\">\n        <span *ngFor=\"let value of values\" class=\"md-chip\">         \n        {{value}} <i class=\"md-icon\" (click)=\"removeValue(value)\" >clear</i>\n        </span>\n\n        <span style=\"display:inline-block;\">\n        <input [(ngModel)]=\"labelToAdd\" \n        (keyup.enter)=\"addValue(box.value, $event);$event.preventDefault()\"\n        (focus)=\"onFocus()\" \n        (focusout)=\"focusOutFunction()\"  \n        #box />\n        </span>\n    </div>\n    <div *ngIf=\"!values || !values.length\">\n        <input class=\"md-chips-input\" placeholder=\"Tags\" #tbox style=\"width:100%\" (keyup.enter)=\"addValue(tbox.value, $event);$event.preventDefault()\"\n        />\n    </div>\n  `,\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],\n  styles: [`\n    .md-chip{background-color:#e0e0e0;color:rgba(0,0,0,0.87)}.md-chip-list input{border:none;outline:0;background:transparent}.md-chip-list .material-icons{height:15px;width:15px;float:right;position:relative;font-size:15px;border-radius:10px;left:5px;cursor:pointer}.md-chip-list .material-icons:hover{background:gray;color:black}.md-chip-list{padding-bottom:5px;box-shadow:0 1px rgba(0,0,0,0.12)}.md-chip-list.md-focused{box-shadow:0 2px #106cc8}.md-chip{display:inline-block;padding:8px 12px 8px 12px;border-radius:16px;font-size:13px;line-height:16px}.md-chip i.md-icon{font-family:'Material Icons';font-weight:normal;font-style:normal;line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;cursor:pointer;border-radius:15px}.md-chip i.md-icon:hover{background:gray}.md-chips-input{border:0;box-shadow:0 1px rgba(0,0,0,0.12);outline:0;background:transparent}.md-chips-input:focus{box-shadow:0 2px #106cc8}\n  `]\n})\n\nexport class MaterialChipsComponent implements ControlValueAccessor {\n\n  addAreaDisplayed: boolean;\n  isTagsFocused = false;\n  values: string[];\n  labelToAdd: string;\n  focused: string;\n\n  @Output() tagsfocusedChange = new EventEmitter();\n  @Output()\n  labelsChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n\n  @Input()\n  get tagsfocused() {\n    return this.isTagsFocused;\n  }\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n  registerOnChange(fn: any) { this.onChangeCallback = fn; }\n  registerOnTouched(fn: any) { this.onTouchedCallback = fn; }\n\n\n\n  removeValue(value: string) {\n    var index = this.values.indexOf(value, 0);\n    if (index != undefined) {\n      this.values.splice(index, 1);\n      this.labelsChange.emit(this.values);\n    }\n  }\n\n  addValue(value: string) {\n    if (!value || value.trim() === '') { return; }\n    this.values.push(value);\n    this.labelsChange.emit(this.values);\n    this.labelToAdd = '';\n  }\n\n  //From ControlValueAccessor interface\n  writeValue(value: string[]) {\n    if (value !== this.values) {\n      this.values = value;\n    }\n  }\n\n  onFocus() {\n    this.focused = 'md-focused';\n    this.isTagsFocused = true;\n    this.tagsfocusedChange.emit(this.isTagsFocused)\n  }\n  focusOutFunction() {\n    this.focused = '';\n    this.isTagsFocused = false;\n    this.tagsfocusedChange.emit(this.isTagsFocused)\n  }\n}"]}